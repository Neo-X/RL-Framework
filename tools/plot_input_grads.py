
"""
Bar chart demo with pairs of bars grouped for easy comparison.
"""
import numpy as np
import matplotlib.pyplot as plt

bar_width = 0.35

opacity = 0.4

grad = [   0.00755374,  0.01761241,  0.0145112 ,  0.01723613,  0.0261055 ,
         0.03857148,  0.03399113,  0.0678277 ,  0.05304647,  0.04439797,
         0.04001307,  0.04232176,  0.02548551,  0.0159651 ,  0.02194294,
         0.01905761,  0.01291193,  0.01506133,  0.01352832,  0.01196897,
         0.01131555,  0.00830054,  0.009157  ,  0.00958596,  0.00957742,
         0.00776873,  0.00799905,  0.01335588,  0.0164025 ,  0.01417159,
         0.01846415,  0.0186845 ,  0.01620699,  0.01416984,  0.01131061,
         0.01396759,  0.00899045,  0.00883547,  0.01031231,  0.0082418 ,
         0.00709355,  0.0079397 ,  0.00944452,  0.00612551,  0.00739153,
         0.00653518,  0.00678342,  0.00499172,  0.00589222,  0.00619066,
         0.00628079,  0.00632557,  0.00590158,  0.00605402,  0.00639854,
         0.00960061,  0.0066735 ,  0.00721597,  0.00706031,  0.0046272 ,
         0.00150577,  0.00085781,  0.00344949,  0.00223814,  0.01158491,
         0.00653159,  0.20146722 ]
index = np.arange(len(grad))

rects1 = plt.bar(index, grad, bar_width,
                 alpha=opacity,
                 color='b',
                 )

plt.xlabel('State Feature')
plt.ylabel('Average gradient')
plt.title('Comparing input feature gradients')
# plt.xticks(index + bar_width / 2, ('A', 'B', 'C', 'D', 'E'))
plt.legend()

plt.tight_layout()
plt.show()
