
"""
Bar chart demo with pairs of bars grouped for easy comparison.
"""
import numpy as np
import matplotlib.pyplot as plt

bar_width = 0.35

opacity = 0.4

grad = [ 0.02765316,  0.07694944,  0.01447139,  0.02623871,  0.028071  ,
         0.03219777,  0.03730906,  0.04150013,  0.02904637,  0.03934316,
         0.02492511,  0.0479122 ,  0.03379568,  0.01938409,  0.03221265,
         0.04964478,  0.02158934,  0.03142545,  0.02660511,  0.02449362,
         0.02505934,  0.03174092,  0.03092963,  0.02904688,  0.01658913,
         0.01421283,  0.03244871,  0.06342301,  0.02472465,  0.01816378,
         0.05948916,  0.04862226,  0.02555691,  0.02327482,  0.02786917,
         0.03223366,  0.01710611,  0.0381428 ,  0.02403381,  0.02391094,
         0.02325845,  0.02483994,  0.04777817,  0.02222695,  0.02736419,
         0.02952004,  0.01772154,  0.04068954,  0.02569388,  0.02482931,
         0.04596773,  0.03272081,  0.01711228,  0.04247716,  0.02164444,
         0.01292183,  0.04986502,  0.02497117,  0.04225409,  0.02093792,
         0.02746036,  0.03378211,  0.03597674,  0.02572267,  0.02951248,
         0.03287965,  0.03398332,  0.05235697,  0.02815999,  0.02320437,
         0.01756272,  0.04267724,  0.04092002,  0.017018  ,  0.03711467,
         0.01888147,  0.02291867,  0.05398828,  0.02619132,  0.0129839 ,
         0.02712052,  0.02462617,  0.01391046,  0.0354918 ,  0.02147694,
         0.02268408,  0.02088973,  0.02483482,  0.02388052,  0.24227204,
         0.01860859,  0.01777355]
index = np.arange(len(grad))

rects1 = plt.bar(index, grad, bar_width,
                 alpha=opacity,
                 color='b',
                 )

plt.xlabel('State Feature')
plt.ylabel('Average gradient')
plt.title('Comparing input feature gradients')
# plt.xticks(index + bar_width / 2, ('A', 'B', 'C', 'D', 'E'))
plt.legend()

plt.tight_layout()
plt.show()