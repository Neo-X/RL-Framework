
"""
Bar chart demo with pairs of bars grouped for easy comparison.
"""
import numpy as np
import matplotlib.pyplot as plt

bar_width = 0.35

opacity = 0.4

grad = [ 0.0453033 ,  0.02544589,  0.02309275,  0.01862294,  0.02961724,
         0.03200471,  0.02401856,  0.02738816,  0.029345  ,  0.0214532 ,
         0.02302322,  0.02918367,  0.01767202,  0.02854697,  0.0187623 ,
         0.03651626,  0.02810892,  0.03213981,  0.01992468,  0.02574773,
         0.01915031,  0.03266985,  0.02856088,  0.02201513,  0.0370349 ,
         0.03419091,  0.02662623,  0.02034247,  0.02058505,  0.02240268,
         0.02068364,  0.02657087,  0.03277393,  0.01642355,  0.02538636,
         0.0225024 ,  0.02520527,  0.02206414,  0.0272092 ,  0.01775245,
         0.02582864,  0.04809996,  0.01832982,  0.0488384 ,  0.04604198,
         0.04078386,  0.01993829,  0.02530062,  0.020589  ,  0.03051303,
         0.04952258,  0.03097977,  0.01931077,  0.02499968,  0.02269385,
         0.02238786,  0.02759158,  0.01798084,  0.03073862,  0.0267974 ,
         0.02379214,  0.03468596,  0.01703435,  0.02308763,  0.03626985,
         0.02022808,  0.02085286,  0.02476788,  0.02032155,  0.01866813,
         0.01766686,  0.01956264,  0.03071029,  0.03515743,  0.03519532,
         0.02420744,  0.02051794,  0.03445057,  0.02850053,  0.02324253,
         0.02085011,  0.03385533,  0.02899056,  0.0289065 ,  0.02729935,
         0.01585519,  0.02470869,  0.03294638,  0.01847201,  0.09350054,
         0.04341027,  0.0195404 ]
index = np.arange(len(grad))

rects1 = plt.bar(index, grad, bar_width,
                 alpha=opacity,
                 color='b',
                 )

plt.xlabel('State Feature')
plt.ylabel('Average gradient')
plt.title('Comparing input feature gradients')
# plt.xticks(index + bar_width / 2, ('A', 'B', 'C', 'D', 'E'))
plt.legend()

plt.tight_layout()
plt.show()