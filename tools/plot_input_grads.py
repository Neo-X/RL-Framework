
"""
Bar chart demo with pairs of bars grouped for easy comparison.
"""
import numpy as np
import matplotlib.pyplot as plt

bar_width = 0.35

opacity = 0.4

grad = [ 0.01986289,  0.02695254,  0.02933877,  0.01722929,  0.02596465,
         0.04190349,  0.02290733,  0.01782699,  0.02334538,  0.02567046,
         0.04045478,  0.01825018,  0.02945501,  0.02200093,  0.03000352,
         0.03693788,  0.02368399,  0.02302526,  0.02950377,  0.01660041,
         0.03267725,  0.03078422,  0.02896701,  0.02443959,  0.03696209,
         0.02708537,  0.01775928,  0.02336182,  0.02414134,  0.03477519,
         0.03108381,  0.02418363,  0.02522088,  0.01794703,  0.02771475,
         0.0423127 ,  0.03191262,  0.02929771,  0.02804271,  0.02435858,
         0.01778691,  0.02133617,  0.03271038,  0.03054141,  0.02534356,
         0.03095787,  0.02586464,  0.04548609,  0.02437125,  0.02805534,
         0.01763929,  0.02724805,  0.02553202,  0.01699819,  0.01929975,
         0.02427945,  0.02170528,  0.02405994,  0.02039698,  0.02036316,
         0.03108797,  0.01777669,  0.02903751,  0.03887863,  0.01699552,
         0.02517894,  0.02315176,  0.03304433,  0.02357943,  0.02737621,
         0.01724148,  0.03464856,  0.03153311,  0.0245917 ,  0.01791237,
         0.02865685,  0.02106695,  0.01736102,  0.01620993,  0.02042254,
         0.01354537,  0.01856531,  0.02269195,  0.03595238,  0.01976015,
         0.0274223 ,  0.0242473 ,  0.02821355,  0.01630772,  0.21380021,
         0.01722075]
index = np.arange(len(grad))

rects1 = plt.bar(index, grad, bar_width,
                 alpha=opacity,
                 color='b',
                 )

plt.xlabel('State Feature')
plt.ylabel('Average gradient')
plt.title('Comparing input feature gradients')
# plt.xticks(index + bar_width / 2, ('A', 'B', 'C', 'D', 'E'))
plt.legend()

plt.tight_layout()
plt.show()